---
title: "Lab 2"
subtitle: "Advanced Data Visualization"
editor: source
embed-resources: true
---

# Instructions

**Create a Quarto file for ALL Lab 2 (no separate files for Parts 1 and 2).**

- Make sure your final file is carefully formatted, so that each analysis is
clear and concise.
- Be sure your knitted `.html` file shows **all** your source code, including
any function definitions. 

# Part One: Identifying Bad Visualizations

If you happen to be bored and looking for a sensible chuckle, you should check
out these [Bad Visualisations](https://badvisualisations.tumblr.com/). Looking through these is also a good exercise in cataloging what makes a visualization
good or bad. 

## Dissecting a Bad Visualization

Below is an example of a less-than-ideal visualization from the collection
linked above. It comes to us from data provided for the [Wellcome Global Monitor 2018 report](https://wellcome.ac.uk/reports/wellcome-global-monitor/2018) by the 
Gallup World Poll:

![](images/bad-wellcome-graph.jpg)

1. While there are certainly issues with this image, do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?

The median percentage of people who believe vaccines are safe vary between regions and there is high variability within regions as well. I think the authors wanted to highlight the differences in vaccine acceptance between regions and make inferences into why they differ. 


2. List the variables that appear to be displayed in this visualization. 
*Hint: Variables refer to columns in the data.*

The variables are likely: Country, Region, "% of People Who Believe Vaccines are Safe" (which could be broken into multiple columns like "Population" and/or survey results), and Rank (by region)

3. Now that you're versed in the grammar of graphics (e.g., `ggplot`), list the *aesthetics* used and which *variables* are mapped to each.

The aesthetics would be *x = "% of People Who Believe Vaccines are Safe"*, *y = rank* and *color = Region*

4. What type of graph would you call this? Meaning, what `geom` would you use
to produce this plot?

I would use *geom_point()* and facet by Region


5. Provide at least four problems or changes that would improve this graph. 
*Please format your changes as bullet points!*

- Cleanup the text labels displayed within the plot (seems too busy)
- Label the y axis with "Rank by Region" so it is easier to interpret how the points are ordered
- Have the size of each regional subplot be consistent (same height), the current setup is visually unappealing
- Change the color of the vertical line representing the region median so it stands out


## Improving the Bad Visualization

The data for the Wellcome Global Monitor 2018 report can be downloaded at the following site: [https://wellcome.ac.uk/reports/wellcome-global-monitor/2018](https://wellcome.org/sites/default/files/wgm2018-dataset-crosstabs-all-countries.xlsx)

<!-- at the "Dataset and crosstabs for all countries" link on the right side of the page-->

There are two worksheets in the downloaded dataset file. You may need to read
them in separately, but you may also just use one if it suffices.

```{r}
#| label: read-in-wellcome-data
#| message: false
library(tidyverse)
library(readxl)
library(ggridges)
library(RColorBrewer)
wgm<-read_xlsx("wgm2018-dataset-crosstabs-all-countries.xlsx",sheet="Full dataset")
notes<-read_xlsx("wgm2018-dataset-crosstabs-all-countries.xlsx",sheet="Data dictionary")

#The "Are vaccines safe" question is Q25, people who believe they are safe have coded responses as 1 or 2 (all other number represent neutral or negative views)

#creating a new, filtered data frame
wgm_filt<-wgm|>
  select(c(WP5,wgt,PROJWT,FIELD_DATE,YEAR_CALENDAR,Q25,Regions_Report))|>
  filter(!is.na(Q25))

#Handling the country codes
countries<-t(str_split(notes[1,3],',',simplify = T))
countryCode<-str_split(countries,"=",simplify=T)
countryCode<-as.data.frame(countryCode)
colnames(countryCode)<-c("WP5","Country")
countryCode$WP5<-as.numeric(countryCode$WP5)

#Handling the region codes
regions<-t(str_split(notes[57,3],',',simplify=T))
regionCode<-str_split(regions,"=",simplify=T)
regionCode<-as.data.frame(regionCode)
colnames(regionCode)<-c("Regions_Report","Region")
regionCode$Regions_Report<-as.numeric(regionCode$Regions_Report)

#Merging country and region names
wgm_merge<-left_join(wgm_filt,countryCode)
wgm_merge<-left_join(wgm_merge,regionCode)

#New column for pro/anti vaccine
wgm_merge<-wgm_merge|>
  mutate(VacView=case_when(
    Q25 <= 2 ~ "Pro",
    Q25 >= 3 ~ "NotPro"
  ))

#Changing region groupings to match plot
plotRegions<-data.frame(Region=unique(wgm_merge$Region),
                        Plot=c("Americas","Middle East and North Africa","Middle East and North Africa","Asia","Asia","Europe","Europe","Europe","Former Soviet Union","Asia","Americas","Americas","Sub-Saharan Africa","Sub-Saharan Africa","Sub-Saharan Africa","Asia","Former Soviet Union","Sub-Saharan Africa","Not assigned"))
wgm_merge<-left_join(wgm_merge,plotRegions)

#Grouping by country for plotting
wgm_country<-wgm_merge|>
  group_by(Country,Plot,VacView)|>
  summarize(Count=n())#grouping by vaccine outlook
wgm_country2<-wgm_merge|>
  group_by(Country,Plot)|>
  summarize(Total=n())#total records from each country

#final merge and calculation of proportions
wgm_country<-left_join(wgm_country,wgm_country2)
wgm_props<-wgm_country|>
  mutate(Prop=Count/Total)|>
  filter(VacView=="Pro",Plot!="Not assigned")
wgm_props$Plot<-factor(wgm_props$Plot,levels = c("Asia","Middle East and North Africa","Sub-Saharan Africa","Americas","Europe","Former Soviet Union"))
```

6. Improve the visualization above by either re-creating it with the issues you
identified fixed OR by creating a new visualization that you believe tells the
same story better.

```{r}
#| label: new-and-improved-visualization
#| message: false

ggplot(wgm_props,aes(Prop*100,Plot,fill = Plot))+
  geom_density_ridges()+ #easier to visualize than points and less busy
  geom_text(data=wgm_props,aes(label = Plot,x=10,hjust=0,vjust=-2))+
  scale_fill_brewer(palette = "Dark2")+ #color-blind friendly
  scale_y_discrete(limits=rev)+
  scale_x_continuous(breaks = seq(20,100,20))+
  labs(x=NULL,y=NULL,title=str_wrap("% of people who believe vaccines are safe, by global region",width = 42))+
  theme_minimal()+
  theme(legend.position="none",axis.text.y = element_blank(),text = element_text(size=15),panel.background = element_rect(fill = "lightgrey",color = "lightgrey"),plot.background = element_rect(fill="lightgrey",color="lightgrey"),panel.grid.minor.x = element_blank(),panel.grid.major.y = element_blank())

```

# Part Two: Broad Visualization Improvement

The full Wellcome Global Monitor 2018 report can be found here: [https://wellcome.ac.uk/sites/default/files/wellcome-global-monitor-2018.pdf](https://wellcome.ac.uk/sites/default/files/wellcome-global-monitor-2018.pdf). 
Surprisingly, the visualization above does not appear in the report despite the
citation in the bottom corner of the image!

## Second Data Visualization Improvement

**For this second plot, you must select a plot that uses maps so you can demonstrate your proficiency with the `leaflet` package!**

7. Select a data visualization in the report that you think could be improved. 
Be sure to cite both the page number and figure title. Do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?



8. List the variables that appear to be displayed in this visualization.



9. Now that you're versed in the grammar of graphics (ggplot), list the
aesthetics used and which variables are specified for each.



10. What type of graph would you call this?



11. List all of the problems or things you would improve about this graph.  

12. Improve the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.

```{r}
#| label: second-improved-visualization


```

## Third Data Visualization Improvement

**For this third plot, you must use one of the other `ggplot2` extension packages mentioned this week (e.g., `gganimate`, `plotly`, `patchwork`, `cowplot`).**
 
13. Select a data visualization in the report that you think could be improved. 
Be sure to cite both the page number and figure title. Do your best to tell the
story of this graph in words. That is, what is this graph telling you? What do
you think the authors meant to convey with it?



14. List the variables that appear to be displayed in this visualization.



15. Now that you're versed in the grammar of graphics (ggplot), list the
aesthetics used and which variables are specified for each.



16. What type of graph would you call this?



17. List all of the problems or things you would improve about this graph.  

18. Improve the visualization above by either re-creating it with the issues you identified fixed OR by creating a new visualization that you believe tells the same story better.

```{r}
#| label: third-improved-visualization


```
